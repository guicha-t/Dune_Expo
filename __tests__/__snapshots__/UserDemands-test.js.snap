// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`render UserDemands correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#FFF",
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "borderBottomColor": "black",
          "elevation": 5,
          "flexDirection": "row",
          "height": 56,
          "shadowColor": "#000",
          "shadowOffset": Object {
            "height": 2,
            "width": 0,
          },
          "shadowOpacity": 0.8,
          "shadowRadius": 2,
        },
        Object {
          "backgroundColor": "#f6c6d2",
        },
      ]
    }
  >
    <View
      style={
        Object {
          "flex": 0.3,
          "justifyContent": "center",
          "paddingLeft": 10,
        }
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <Image
          source={1}
          style={
            Object {
              "height": 24,
              "width": 24,
            }
          }
        />
      </View>
    </View>
    <View
      style={
        Object {
          "flex": 0.4,
        }
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "flex": 1,
            "opacity": 1,
          }
        }
      >
        <Image
          resizeMode="contain"
          source={1}
          style={
            Object {
              "flex": 1,
              "height": undefined,
              "width": undefined,
            }
          }
        />
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "flex-end",
          "flex": 0.3,
          "justifyContent": "center",
          "paddingRight": 10,
        }
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <Image
          resizeMode="contain"
          source={1}
          style={
            Object {
              "height": 32,
              "width": 32,
            }
          }
        />
      </View>
    </View>
    <Modal
      animationType="fade"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      supportedOrientations={
        Array [
          "portrait",
          "portrait-upside-down",
          "landscape",
          "landscape-left",
          "landscape-right",
        ]
      }
      transparent={true}
      visible={false}
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "flex": 1,
            "justifyContent": "center",
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#FFF",
              "borderColor": "#ea4335",
              "borderRadius": 5,
              "borderWidth": 1,
              "marginHorizontal": 30,
              "maxWidth": 350,
              "shadowColor": "#000000",
              "shadowOpacity": 0.1,
              "shadowRadius": 10,
              "transform": Array [
                Object {
                  "scale": 0,
                },
              ],
            }
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "justifyContent": "center",
                  "padding": 20,
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#333",
                      "fontSize": 18,
                      "fontWeight": "500",
                      "lineHeight": 25,
                      "textAlign": "center",
                    },
                    undefined,
                  ]
                }
              >
                ATTENTION !
              </Text>
              <Text
                style={
                  Array [
                    Object {
                      "color": "#666",
                      "fontSize": 17,
                      "paddingTop": 10,
                      "textAlign": "center",
                    },
                    undefined,
                  ]
                }
              >
                Vous devez accepter les conditions d'utilisation avant de pouvoir utiliser l'application.
              </Text>
            </View>
            <View
              style={
                Object {
                  "borderRadius": 5,
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "justifyContent": "center",
                }
              }
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#ea4335",
                    "borderRadius": 5,
                    "marginBottom": 20,
                    "marginHorizontal": 10,
                    "minWidth": 90,
                    "opacity": 1,
                    "paddingVertical": 8,
                  }
                }
                testID="buttonConfirm"
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#FFF",
                        "fontSize": 15,
                        "fontWeight": "600",
                        "textAlign": "center",
                      },
                      undefined,
                    ]
                  }
                >
                  COMPRIS
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </Modal>
  </View>
  <View
    style={
      Object {
        "backgroundColor": "#FFF",
        "flex": 1,
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#FFF",
          "marginTop": 15,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "marginLeft": 15,
              "marginRight": 15,
            },
            undefined,
            undefined,
            undefined,
          ]
        }
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={null}
        >
          <View
            pointerEvents="box-only"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#9E9E9E",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "padding": 19,
                },
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                Object {
                  "padding": 12,
                },
                undefined,
                undefined,
                undefined,
                Object {
                  "backgroundColor": "#2A5E85",
                  "borderColor": "white",
                  "borderRadius": 30,
                  "borderWidth": 2,
                  "paddingLeft": 20,
                  "width": 60,
                },
                undefined,
                undefined,
              ]
            }
          >
            <Text />
            <Text
              style={
                Array [
                  Object {},
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  Array [
                    Object {
                      "color": "white",
                      "fontSize": 20,
                    },
                    undefined,
                    Object {
                      "fontSize": 17.5,
                    },
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                  ],
                ]
              }
            >
              
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFF",
          "flex": 0.2,
          "justifyContent": "center",
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#2A5E85",
            "fontSize": 20,
            "textAlign": "center",
          }
        }
      >
        Accepter une demande d'application vous fera utiliser l'un de vos 
        0
         crédit(s) gratuit(s).
      </Text>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFF",
          "flex": 0.8,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#2A5E85",
            "fontSize": 20,
            "paddingTop": 80,
            "textAlign": "center",
          }
        }
      >
         Aucune notification. 
      </Text>
      <View>
        <Modal
          animationType="slide"
          hardwareAccelerated={false}
          onRequestClose={[Function]}
          transparent={true}
          visible={false}
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "justifyContent": "center",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#2A5E85",
                  "borderColor": "#fff",
                  "borderRadius": 10,
                  "borderWidth": 1,
                  "height": 450,
                  "justifyContent": "center",
                  "width": "90%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "#fff",
                    "fontSize": 20,
                    "textAlign": "center",
                  }
                }
              >
                 Vous avez une demande sur l'application
                 null
                .
              </Text>
              <Text
                onPress={[Function]}
                style={
                  Object {
                    "color": "#f6c6d2",
                    "fontSize": 20,
                    "textAlign": "center",
                    "textDecorationLine": "underline",
                  }
                }
              >
                Voir l'application
              </Text>
              <Text
                style={
                  Object {
                    "color": "#fff",
                    "fontSize": 20,
                    "padding": 20,
                    "textAlign": "center",
                  }
                }
              >
                 Cette demande a été faite par:
              </Text>
              <RCTScrollView
                data={Array []}
                disableVirtualization={false}
                getItem={[Function]}
                getItemCount={[Function]}
                horizontal={false}
                initialNumToRender={10}
                itemWidth={null}
                keyExtractor={[Function]}
                maxToRenderPerBatch={10}
                numColumns={1}
                onContentSizeChange={[Function]}
                onEndReachedThreshold={2}
                onLayout={[Function]}
                onMomentumScrollEnd={[Function]}
                onScroll={[Function]}
                onScrollBeginDrag={[Function]}
                onScrollEndDrag={[Function]}
                removeClippedSubviews={false}
                renderItem={[Function]}
                scrollEventThrottle={50}
                stickyHeaderIndices={Array []}
                style={
                  Array [
                    Object {
                      "paddingTop": 1,
                    },
                    Object {},
                  ]
                }
                updateCellsBatchingPeriod={50}
                viewabilityConfigCallbackPairs={Array []}
                windowSize={21}
              >
                <View />
              </RCTScrollView>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "marginBottom": "5%",
                    "marginTop": "10%",
                  }
                }
              >
                <View
                  accessible={true}
                  isTVSelectable={true}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "margin": "5%",
                      "opacity": 1,
                    }
                  }
                >
                  <Image
                    resizeMode="contain"
                    source={1}
                    style={
                      Object {
                        "height": 50,
                        "width": 50,
                      }
                    }
                  />
                </View>
                <View
                  accessible={true}
                  isTVSelectable={true}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "margin": "5%",
                      "opacity": 1,
                    }
                  }
                >
                  <Image
                    resizeMode="contain"
                    source={1}
                    style={
                      Object {
                        "height": 50,
                        "width": 50,
                      }
                    }
                  />
                </View>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "marginLeft": 15,
                      "marginRight": 15,
                    },
                    undefined,
                    undefined,
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  isTVSelectable={true}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={null}
                >
                  <View
                    pointerEvents="box-only"
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#9E9E9E",
                          "flexDirection": "row",
                          "justifyContent": "center",
                          "padding": 19,
                        },
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        Object {
                          "padding": 12,
                        },
                        undefined,
                        undefined,
                        undefined,
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#2A5E85",
                          "borderColor": "white",
                          "borderRadius": 30,
                          "height": 50,
                          "justifyContent": "center",
                          "paddingLeft": 10,
                          "width": 180,
                        },
                        undefined,
                        undefined,
                      ]
                    }
                  >
                    <Text />
                    <Text
                      style={
                        Array [
                          Object {},
                          undefined,
                          undefined,
                          undefined,
                          undefined,
                          undefined,
                          undefined,
                          undefined,
                          undefined,
                          undefined,
                          Array [
                            Object {
                              "color": "white",
                              "fontSize": 20,
                            },
                            undefined,
                            Object {
                              "fontSize": 17.5,
                            },
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                          ],
                        ]
                      }
                    >
                      RETOUR
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </Modal>
      </View>
    </View>
  </View>
  <Modal
    animationType="fade"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    supportedOrientations={
      Array [
        "portrait",
        "portrait-upside-down",
        "landscape",
        "landscape-left",
        "landscape-right",
      ]
    }
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "flex": 1,
          "justifyContent": "center",
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "#FFF",
            "borderColor": "#2A5E85",
            "borderRadius": 5,
            "borderWidth": 1,
            "color": "#2A5E85",
            "marginHorizontal": 30,
            "maxWidth": 350,
            "shadowColor": "#000000",
            "shadowOpacity": 0.1,
            "shadowRadius": 10,
            "transform": Array [
              Object {
                "scale": 0,
              },
            ],
          }
        }
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Object {
                "justifyContent": "center",
                "padding": 20,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#333",
                    "fontSize": 18,
                    "fontWeight": "500",
                    "lineHeight": 25,
                    "textAlign": "center",
                  },
                  Object {
                    "color": "red",
                  },
                ]
              }
            >
              ATTENTION
            </Text>
            <Text
              style={
                Array [
                  Object {
                    "color": "#666",
                    "fontSize": 17,
                    "paddingTop": 10,
                    "textAlign": "center",
                  },
                  Object {
                    "color": "#2A5E85",
                  },
                ]
              }
            >
              Vous n'avez plus assez de crédit gratuit, pour acheter cette application, rendez-vous sur l'application web pour choisir un autre moyen de paiement.
            </Text>
          </View>
          <View
            style={
              Object {
                "borderRadius": 5,
                "flexDirection": "row",
                "flexWrap": "wrap",
                "justifyContent": "center",
              }
            }
          >
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#2A5E85",
                  "borderRadius": 5,
                  "marginBottom": 20,
                  "marginHorizontal": 10,
                  "minWidth": 90,
                  "opacity": 1,
                  "paddingVertical": 8,
                }
              }
              testID="buttonConfirm"
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#FFF",
                      "fontSize": 15,
                      "fontWeight": "600",
                      "textAlign": "center",
                    },
                    undefined,
                  ]
                }
              >
                RETOUR
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </Modal>
</View>
`;
