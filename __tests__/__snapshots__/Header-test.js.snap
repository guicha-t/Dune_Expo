// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`render Header correctly 1`] = `
<View
  style={
    Array [
      Object {
        "borderBottomColor": "black",
        "elevation": 5,
        "flexDirection": "row",
        "height": 56,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.8,
        "shadowRadius": 2,
      },
      Object {
        "backgroundColor": "#f6c6d2",
      },
    ]
  }
>
  <View
    style={
      Object {
        "flex": 0.3,
        "justifyContent": "center",
        "paddingLeft": 10,
      }
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <Image
        source={1}
        style={
          Object {
            "height": 24,
            "width": 24,
          }
        }
      />
    </View>
  </View>
  <View
    style={
      Object {
        "flex": 0.4,
      }
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flex": 1,
          "opacity": 1,
        }
      }
    >
      <Image
        resizeMode="contain"
        source={1}
        style={
          Object {
            "flex": 1,
            "height": undefined,
            "width": undefined,
          }
        }
      />
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "flex-end",
        "flex": 0.3,
        "justifyContent": "center",
        "paddingRight": 10,
      }
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <Image
        resizeMode="contain"
        source={1}
        style={
          Object {
            "height": 32,
            "width": 32,
          }
        }
      />
    </View>
  </View>
  <Modal
    animationType="fade"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    supportedOrientations={
      Array [
        "portrait",
        "portrait-upside-down",
        "landscape",
        "landscape-left",
        "landscape-right",
      ]
    }
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "flex": 1,
          "justifyContent": "center",
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "#FFF",
            "borderColor": "#ea4335",
            "borderRadius": 5,
            "borderWidth": 1,
            "marginHorizontal": 30,
            "maxWidth": 350,
            "shadowColor": "#000000",
            "shadowOpacity": 0.1,
            "shadowRadius": 10,
            "transform": Array [
              Object {
                "scale": 0,
              },
            ],
          }
        }
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Object {
                "justifyContent": "center",
                "padding": 20,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#333",
                    "fontSize": 18,
                    "fontWeight": "500",
                    "lineHeight": 25,
                    "textAlign": "center",
                  },
                  undefined,
                ]
              }
            >
              ATTENTION !
            </Text>
            <Text
              style={
                Array [
                  Object {
                    "color": "#666",
                    "fontSize": 17,
                    "paddingTop": 10,
                    "textAlign": "center",
                  },
                  undefined,
                ]
              }
            >
              Vous devez accepter les conditions d'utilisation avant de pouvoir utiliser l'application.
            </Text>
          </View>
          <View
            style={
              Object {
                "borderRadius": 5,
                "flexDirection": "row",
                "flexWrap": "wrap",
                "justifyContent": "center",
              }
            }
          >
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#ea4335",
                  "borderRadius": 5,
                  "marginBottom": 20,
                  "marginHorizontal": 10,
                  "minWidth": 90,
                  "opacity": 1,
                  "paddingVertical": 8,
                }
              }
              testID="buttonConfirm"
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#FFF",
                      "fontSize": 15,
                      "fontWeight": "600",
                      "textAlign": "center",
                    },
                    undefined,
                  ]
                }
              >
                COMPRIS
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </Modal>
</View>
`;
